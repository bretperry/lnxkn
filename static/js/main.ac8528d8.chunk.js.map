{"version":3,"sources":["cssVars.js","store.js","components/FilterZone.jsx","components/ItemRow.jsx","itemType.js","components/CommandTable.jsx","components/ManPage.jsx","components/TheDeets.jsx","App.js","reportWebVitals.js","index.js"],"names":["cssVars","background","tableColor","fontColor","fontColorLt","highlight","titleFont","fixedFont","bodyFont","tablePadding","store","list","filter","selectedItem","makeObservable","this","observable","filteredList","computed","console","log","it","name","toLocaleLowerCase","includes","fetch","then","resp","json","setList","Input","styled","input","observer","type","value","onChange","evt","setFilter","target","TdName","PropTypes","shape","string","isRequired","alias","motto","content","td","Span","span","ItemRow","listItem","onSelect","onClick","join","Table","table","Thead","thead","Tbody","tbody","map","item","setSelected","ManPage","props","state","error","dataFetched","data","response","setState","message","React","Component","ItemTitle","h1","DeetsDiv","div","StatsTable","document","getElementById","sel","stats","Object","keys","key","Title","Container","Columns","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline"],"mappings":"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","file":"static/js/main.ac8528d8.chunk.js","sourcesContent":["  const cssVars = {\n    background: '#e2fffd',\n    tableColor: '#feffe7',\n    fontColor: '#a2a2a2',\n    fontColorLt: '#dedede',\n    highlight: '#f6ffa4',\n    titleFont: 'Futura, Open Sans',\n    fixedFont: 'Cutive Mono, mono',\n    bodyFont: 'Futura, Open Sans',\n    tablePadding: '.25rem .5rem',\n  }\n\n  export default cssVars;","import { makeObservable, observable, computed } from 'mobx';\n\nclass Store{\n  list = [];\n  filter = \"\";\n  selectedItem = null;\n\n  constructor(){\n    makeObservable(this, {\n      list: observable,\n      filter: observable,\n      selectedItem: observable,\n      filteredList: computed,\n    });\n  }\n\n  get filteredList() {\n    console.log(\"filteredList\");\n    let it= this.list\n      .filter(({ name }) =>\n        name.toLocaleLowerCase().includes(this.filter.toLocaleLowerCase())\n      );\n    console.log(it);\n\n    return it;\n  }\n\n  setList(list){\n    this.list = list;\n  }\n  setFilter(filter){\n    this.filter = filter;\n  }\n  setSelected(selectedItem){\n    this.selectedItem = selectedItem;\n  }\n}\n\nconst store = new Store();\n\nfetch(\"/list.json\")\n    .then(resp => resp.json())\n    .then((list) => store.setList(list));\n\nexport default store;\n\n// import create from 'zustand'\n\n// const useStore = create(set => ({\n//   list: [],\n//   filter: \"\",\n//   selectedItem: null,\n//   setList: (list) => \n//     set((state) => ({\n//       ...state,\n//       list,\n//     })),\n//   setFilter: (filter) => \n//     set((state) => ({\n//       ...state,\n//       filter,\n//     })),\n//   setSelected: (selectedItem) => \n//     set((state) => ({\n//       ...state,\n//       selectedItem,\n//     })),\n// }));\n\n// export default useStore;","import React, { useContext } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport store from \"../store\";\n\nimport styled from \"@emotion/styled\";\n\nimport cssVars from \"../cssVars\";\n\nconst Input = styled.input`\n\tposition: fixed;\n  width: 30%;\n  padding: 0.2rem;\n  font-size: large;\n  border: none;\n  top: 20px; right: 20px;\n`;\n\nconst FilterZone = () => {\n\treturn(\n\t\t<Input\n\t    \ttype =\"text\"\n\t    \tvalue={store.filter}\n\t    \tonChange={(evt)=> \n\t    \t\tstore.setFilter(evt.target.value)\n\t    \t}\n\t\t/>\n\t);\n};\n\nexport default observer(FilterZone);\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\n\nimport ItemType from '../itemType';\n\nconst TdName = styled.td`\n  width: 100%;\n  font-size: large;\n`;\n\nconst Span = styled.span`\n  font-size: xx-small;\n`;\n\nconst ItemRow = ({ listItem, onSelect }) => {\n  return(\n    <tr onClick={()=>onSelect(listItem)}>\n      <TdName>\n        {listItem.name}{console.log(listItem.name)} \n        <Span>{listItem.type.join(\", \")}</Span>\n      </TdName>\n    </tr>\n  );\n};\n\n\nexport default ItemRow;","\nimport PropTypes from \"prop-types\";\n\nconst ItemType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  alias: PropTypes.string.isRequired,\n  motto: PropTypes.string.isRequired,\n  //ype: PropTypes.arrayOf(PropTypes.string.isRequired),\n  content: PropTypes.string\n\n});\n\nexport default ItemType;","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport { observer } from \"mobx-react\";\n\nimport store from \"../store\";\n\nimport ItemRow from \"../components/ItemRow\";\nimport cssVars from \"../cssVars\";\n\nconst tableColor = '#feffe7';\n\nconst Table = styled.table`\n\tbackground-color: ${cssVars.tableColor};\n\tborder: none;\n\tfont-weight:bold;\n\tfont-family: ${cssVars.fixedFont};\n\tpadding: 200px 0.6rem 1rem;\n\twidth: 100%;\n`;\nconst Thead = styled.thead`\n\tdisplay:none;\n`;\nconst Tbody = styled.tbody`\n\tbackground-color: #feffe7;\n\tborder: none;\n\tfont-weight:bold;\n\twidth: 100%;;\n\n`;\n\nconst CommandTable = () => {\n\treturn(\n\t  <Table >\n\t    <Thead>\n\t      <tr>\n\t        <th>Command</th>\n\t        <th>Type</th>\n\t      </tr>\n\t    </Thead>\n\t    <Tbody>\n\t      {store.filteredList\n\t        .map((item) =>(\n\t          <ItemRow \n\t            listItem={item} \n\t            key={item.name} \n\t            onSelect={(item) => \n\t            \tstore.setSelected(item)\n\t   \t\t\t}\n\t          />\n\t     ))}\n\t    </Tbody>\n\t  </Table>\n\t);\n};\n\n\nexport default observer(CommandTable);","import React from 'react';\n//import { Provider, useSelector, useDispatch } from 'react-redux';\n// import useStore from \"../store\";\nimport styled from \"@emotion/styled\";\n// import MainContext from \"../MainContext\";\n\nimport { observer } from \"mobx-react\";\n\nimport store from \"../store\";\nimport cssVars from \"../cssVars\";\n\n        const manUrlRoot = \"https://man.cx/\";\n\nclass ManPage extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      dataFetched: false,\n      data: {}\n    };\n  }\n  \n  componentDidMount() {\n    fetch(\"https://ss64.com/bash/dd.html\")\n      .then(\n        (response) => {\n          this.setState({\n            dataFetched: true,\n            data: response\n          });\n        },\n        (error) => {\n          this.setState({\n            dataFetched: true,\n            error\n          });\n        }\n      )\n  }\n  \n  render() {\n    const { error, dataFetched, data } = this.state;\n    //alert(this.state, data);\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!dataFetched) {\n      return <div>Loading...</div>;\n    } else {\n        console.log(data);\n        debugger;\n      return (\n        <div>GOOD</div>\n      );\n    }\n  }\n}\n\nexport default ManPage;\n ","import React, { useEffect } from 'react';\n//import { Provider, useSelector, useDispatch } from 'react-redux';\n// import useStore from \"../store\";\nimport styled from \"@emotion/styled\";\n// import MainContext from \"../MainContext\";\n\nimport { observer } from \"mobx-react\";\n\nimport store from \"../store\";\n\nimport ManPage from \"./ManPage\";\nimport cssVars from \"../cssVars\";\n\nconst manUrlRoot = \"https://man.cx/\";\n\nconst ItemTitle = styled.h1`\n  background-color: ${cssVars.tableColor};\n  padding: ${cssVars.tablePadding};\n  margin: 0 0 1rem;;\n  font-size: x-large;\n  font-family: ${cssVars.fixedFont};\n`;\n\nconst DeetsDiv = styled.div`\n  background-color: ${cssVars.tableColor};\n  padding: ${cssVars.tablePadding};\n  font-family: ${cssVars.fixedFont};\n`;\n\nconst StatsTable = styled.table`\n  font-family: ${cssVars.bodyFont};\n  background-color: ${cssVars.fontColorLt};\n  color: ${cssVars.tableColor};\n  font-size: x-small;\n  padding: .7em;\n  float: right;\n  margin: .2rem;\n`;\n\nconst TheDeets = () => {\n  console.log(\"init TheDeets\");\n\n  const manZone = document.getElementById('man');\n  const sel = store.selectedItem || null;\n\n  return sel ? (\n    <div>\n      <ItemTitle>{sel.alias }</ItemTitle>\n      <DeetsDiv>\n              {sel.stats &&       \n          <StatsTable>\n            <tbody>\n              {Object.keys(sel.stats).map((key) => (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>{sel.stats[key]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </StatsTable>\n        }\n        <p>{sel.motto }</p>\n        <p>spheres: {sel.type.join(\", \")}</p>\n        <div>{sel.content}</div>\n        <ManPage />\n        <p>The end</p>\n      </DeetsDiv>\n    </div>\n  ) : null;\n};\n\nexport default observer(TheDeets);\n","\nimport React from 'react';\nimport styled from \"@emotion/styled\";\n\nimport './App.css';\nimport cssVars from \"./cssVars\";\n\nimport FilterZone from \"./components/FilterZone\";\nimport CommandTable from \"./components/CommandTable\";\nimport TheDeets from \"./components/TheDeets\";\n\nconst typeIcons = {\n    networking: \"&#128423;\",\n    disk: \"&#128436;\"\n}\nconst Title = styled.h1`\n  font-family:Futura, sans serif;\n  font-weight: normal;\n  font-size: xx-large;\n  letter-spacing: .5rem;\n`;\nconst Container = styled.div`\n  margin: auto;\n  max-width: 900px;\n  padding: 1em;\n  color:${cssVars.fontColor};\n`;\nconst Columns = styled.div`\n  display: grid;\n  grid-template-columns: 33% 67%;\n  grid-column-gap: 1rem;\n`;\n\nfunction App() {\n  console.log(\"initializing App...\");\n  return (\n      <Container>\n\n        <Columns>\n          <div>\n\n            <CommandTable />\n          </div>\n          <div>\n              <Title>Linuxicon</Title>\n              <FilterZone />\n              <p>A little linux lexicon</p>\n              <p>Scroll the Command Wheel, or use arrows.</p>\n              <TheDeets />\n          </div>\n\n        </Columns>\n      </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from \"@material-ui/core\";\n\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}